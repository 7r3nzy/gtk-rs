on:
  push:
    branches: [master]
  pull_request:

name: CI

jobs:
  build:
    name: ${{matrix.conf.name}} (rust ${{matrix.rust}})
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.10
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly
          - "1.48.0"
        conf:
          - { name: "atk", features: "v2_34", nightly: "--all-features", test_sys: true }
          - { name: "cairo", features: "png,pdf,svg,ps,use_glib,v1_16,freetype,script,xcb,xlib,win32-surface", nightly: "--features 'png,pdf,svg,ps,use_glib,v1_16,freetype,script,xcb,xlib,win32-surface'", test_sys: true }
          - { name: "gdk", features: "v3_24", nightly: "--features v3_24", test_sys: true }
          - { name: "gdk-pixbuf", features: "v2_40", nightly: "--all-features", test_sys: true }
          - { name: "gdkx11", features: "v3_24", nightly: "--all-features", test_sys: true }
          - { name: "gio", features: "v2_66", nightly: "--all-features", test_sys: false }
          - { name: "glib", features: "v2_66", nightly: "--all-features", test_sys: false }
          - { name: "graphene", features: "v1_10", nightly: "", test_sys: false }
          - { name: "gtk", features: "v3_24_9", nightly: "--all-features", test_sys: false }
          - { name: "pango", features: "v1_46", nightly: "--all-features", test_sys: false }
          - { name: "pangocairo", features: "", nightly: "--all-features", test_sys: true }
    steps:
      - run: apt-get update -y
      - run: apt-get install -y libgtk-3-dev libglib2.0-dev libgraphene-1.0-dev git xvfb curl libcairo-gobject2 libcairo2-dev
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      # nightly
      - name: tests nightly
        run: xvfb-run --auto-servernum cargo test --manifest-path ${{ matrix.conf.name }}/Cargo.toml ${{ matrix.conf.nightly }}
        if: matrix.rust == 'nightly'
      - name: tests sys nightly
        run: xvfb-run --auto-servernum cargo test --manifest-path ${{ matrix.conf.name }}/sys/Cargo.toml ${{ matrix.conf.nightly }}
        if: matrix.rust == 'nightly' && matrix.conf.test_sys
      - name: build nightly
        run: cargo build --manifest-path ${{ matrix.conf.name }}/Cargo.toml ${{ matrix.conf.nightly }}
        if: matrix.rust == 'nightly'
      # not nightly
      - name: tests
        run: xvfb-run --auto-servernum cargo test --manifest-path ${{ matrix.conf.name }}/Cargo.toml --features "${{ matrix.conf.features }}"
        if: matrix.rust != 'nightly'
      - name: tests sys
        run: xvfb-run --auto-servernum cargo test --manifest-path ${{ matrix.conf.name }}/sys/Cargo.toml --features "${{ matrix.conf.features }}"
        if: matrix.rust != 'nightly' && matrix.conf.test_sys
      - name: build
        run: cargo build --manifest-path ${{ matrix.conf.name }}/Cargo.toml --features "${{ matrix.conf.features }}"
        if: matrix.rust != 'nightly'

      # rustdoc-stripper
      - name: doc add
        run: cargo build --manifest-path ${{ matrix.conf.name }}/Cargo.toml --features "dox,embed-lgpl-docs"
        if: matrix.rust == 'nightly'
      - name: doc removal
        run: cargo build --manifest-path ${{ matrix.conf.name }}/Cargo.toml --features "purge-lgpl-docs"
        if: matrix.rust == 'nightly'
      - name: check diff
        run: git diff -R --exit-code
        if: matrix.rust == 'nightly'

      - uses: bcomnes/cleanup-xvfb@v1

  build-others:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.10
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly
          - "1.48.0"
    steps:
      - run: apt-get update -y
      - run: apt-get install -y libgtk-3-dev libglib2.0-dev libgraphene-1.0-dev git xvfb curl libcairo-gobject2 libcairo2-dev
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      # glib (macros)
      - name: "glib: tests glib macros nightly"
        working-directory: glib
        run: python3 clone_tests/clone_compilation_errors.py
        if: matrix.rust == 'nightly'
      - name: "glib: tests glib macros"
        working-directory: glib
        run: python3 clone_tests/clone_compilation_errors.py
        if: matrix.rust != 'nightly'
      # glib-macros
      - name: "glib-macros: tests"
        run: xvfb-run --auto-servernum cargo test --manifest-path glib-macros/Cargo.toml
      - name: "glib-macros: build"
        run: cargo build --manifest-path glib-macros/Cargo.toml
      # examples
      - name: "examples"
        run: cargo build --manifest-path examples/Cargo.toml --bins --examples --all-features

      - uses: bcomnes/cleanup-xvfb@v1

  fmt:
    name: rust fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.10
    steps:
      - run: apt-get update -y
      - run: apt-get install -y libgtk-3-dev libglib2.0-dev libgraphene-1.0-dev git xvfb curl libcairo-gobject2 libcairo2-dev
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy

      - working-directory: atk
        name: atk
        run: cargo clippy --features "v2_34" --all-targets -- -D warnings

      - working-directory: cairo
        name: cairo
        run: cargo clippy --features "png,pdf,svg,ps,use_glib,v1_16,freetype,script,xcb,xlib,win32-surface" --all-targets -- -D warnings

      - working-directory: examples
        name: examples
        run: cargo clippy --all-features --all-targets -- -D warnings

      - working-directory: gdk
        name: gdk
        run: cargo clippy --features "v3_24" --all-targets -- -D warnings

      - working-directory: gdk-pixbuf
        name: gdk-pixbuf
        run: cargo clippy --features "v2_40" --all-targets -- -D warnings

      - working-directory: gdkx11
        name: gdkx11
        run: cargo clippy --features "v3_24" --all-targets -- -D warnings

      - working-directory: gio
        name: gio
        run: cargo clippy --features "v2_66" --all-targets -- -D warnings

      - working-directory: glib
        name: glib
        run: cargo clippy --features "v2_66" --all-targets -- -D warnings

      - working-directory: glib-macros
        name: glib-macros
        run: cargo clippy --all-targets -- -D warnings

      - working-directory:  graphene
        name: graphene
        run: cargo clippy --features "v1_10" --all-targets -- -D warnings

      - working-directory: gtk
        name: gtk
        run: cargo clippy --features "v3_24_9" --all-targets -- -D warnings

      - working-directory: pango
        name: pango
        run: cargo clippy --features "v1_46" --all-targets -- -D warnings

      - working-directory: pangocairo
        name: pangocairo
        run: cargo clippy --all-targets -- -D warnings

  generator:
    name: regen check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - run: python3 generator.py
      - run: git diff -R --exit-code

  checker:
    name: gtk-rs checker
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate:
          - { name: 'atk', extra: '' }
          - { name: 'cairo', extra: '--no-manual-traits' }
          - { name: 'gdk', extra: '' }
          - { name: 'gdk-pixbuf', extra: '' }
          - { name: 'gdkx11', extra: '' }
          - { name: 'gio', extra: '' }
          - { name: 'glib', extra: '' }
          - { name: 'glib-macros', extra: '--no-manual-traits' }
          - { name: 'graphene', extra: '' }
          - { name: 'gtk', extra: '' }
          - { name: 'gtk3-macros', extra: '--no-manual-traits' }
          - { name: 'pango', extra: '' }
          - { name: 'pangocairo', extra: '' }
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: gtk-rs/checker
          ref: master
          path: checker
      - run: cargo build --release
        working-directory: checker
      - run: cargo run -- ${{matrix.crate.extra}} ../${{matrix.crate.name}}
        working-directory: checker
      - run: cargo run -- --no-license ../${{matrix.crate.name}}/sys
        working-directory: checker
        if: matrix.crate.extra == ''
      - run: ./check_init_asserts ../${{matrix.crate.name}}
        working-directory: checker
        if: matrix.crate == 'atk' || matrix.crate == 'gdk' || matrix.crate == 'gdkx11' || matrix.crate == 'gtk'
