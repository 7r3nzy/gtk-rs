SHELL := /bin/bash

ERROR_COLOR = \x1b[31;01m
OK_COLOR    = \x1b[32;01m
NO_COLOR    = \x1b[0m
ECHO 		= echo -e

LIBNAME             = rustgtk

GLUE_LIBNAME 		= lib$(LIBNAME)_glue
GLUE_SRC			= gtk_glue/gtk_glue.c

TEST_SRC 		  	= test/main.rs

INC 				= $(shell pkg-config --cflags gtk+-3.0)
LIBS 				= $(shell pkg-config --libs gtk+-3.0)
RUSTC 				= rustc
OS 					= $(shell uname)

.DEFAULT: rustgtk
.PHONY: rustgtk
rustgtk: glue rustgtk-build | lib/

.PHONY: rustgtk-build
rustgtk-build: src/*
					@$(ECHO) "$(OK_COLOR) Building rustgtk.rlib $(NO_COLOR)"
					$(RUSTC) -L lib/ src/$(LIBNAME).rs --out-dir lib/

#make rulse for the glue library
.PHONY: glue
ifeq ($(OS), Darwin)
glue : lib/$(GLUE_LIBNAME).dylib
else
glue : lib/$(GLUE_LIBNAME).a
endif

lib/$(GLUE_LIBNAME).dylib: $(GLUE_SRC) | lib/ tmp/
					$(CC) $(INC) $(LIBS) -dynamiclib -o lib/$(GLUE_LIBNAME).dylib $(SRC)

lib/$(GLUE_LIBNAME).o: $(GLUE_SRC) | lib/
					$(CC) -g -c $^ $(INC) -o $@ $(LIBS)

lib/$(GLUE_LIBNAME).a: lib/$(GLUE_LIBNAME).o | lib/
					ar -rcs $@ $^ 

lib/$(GLUE_LIBNAME).so:    lib/$(GLUE_LIBNAME).o | lib/
					$(CC) -shared -Wl,-soname,$(GLUE_LIBNAME).so -o $@ $^ -lc

.PHONY: test
test:				$(TEST_SRC) | bin/
					@$(ECHO) "$(OK_COLOR) Building test $(NO_COLOR)"
					$(RUSTC) -L lib/ $(TEST_SRC) -o bin/test
					./bin/test

.PHONY: doc
doc: 				
					rustdoc -o doc/ src/rustgtk.rs
					chmod -R 755 doc/ 

lib/:
					mkdir -p $@
					@$(ECHO) "$(OK_COLOR) Created $@ foldder $(NO_COLOR)"

bin/:
					mkdir -p $@
					@$(ECHO) "$(OK_COLOR) Created $@ foldder $(NO_COLOR)"

.PHONY: full
full:				glue rustgtk test

.PHONY: clean
clean:
					rm -rf tmp/ lib/ doc/

